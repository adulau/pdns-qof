<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC1035 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC1034 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC4627 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4627.xml">
<!ENTITY RFC5001 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5001.xml">
<!ENTITY RFC3597 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3597.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-ietf-dulaunoy-kaplan-pdns-cof-01" ipr="full3978">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <title abbrev="Abbreviated Title">Passive DNS - Common Output Format</title>
    <author fullname="Alexandre Dulaunoy" initials=""
            surname="Dulaunoy">
      <organization>CIRCL</organization>
      <address>
        <postal>
          <street>41, avenue de la gare</street>
          <city>Luxembourg</city>
          <region></region>
          <code>L-1611</code>
          <country>LU</country>
        </postal>
        <phone>(+352) 247 88444</phone>
        <email>alexandre.dulaunoy@circl.lu</email>
        <uri>http://www.circl.lu/</uri>
        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>


    <author fullname="Leon Aaron Kaplan" initials=""
            surname="Kaplan">
      <organization>CERT.at</organization>
      <address>
        <postal>
          <street>Karlsplatz 1/2/9</street>
          <city>Vienna</city>
          <region></region>
          <code>A-1010</code>
          <country>AT</country>
        </postal>
        <phone>+43 1 5056416 78</phone>
        <email>kaplan@cert.at</email>
        <uri>http://www.cert.at/</uri>
      </address>
    </author>

    <author fullname="Paul Vixie" initials=""
            surname="Vixie">
      <organization>Farsight Security, Inc.</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <region></region>
          <code></code>
          <country></country>
        </postal>
        <phone></phone>
		<email>paul@redbarn.org</email>
        <uri>/</uri>
       </address>
    </author>

	<author fullname="Henry Stern" initials="hs" surname="Stern">
		<organization>Cisco</organization>
		<address>
			<postal>
				<street>1741 Brunswick Street, Suite 500</street>
				<city>Halifax</city>
				<region>Nova Scotia</region>
				<code>B3J 3X8</code>
				<country>Canada</country>
			</postal>
			<phone>+1 408 922 4555</phone>
			<email>hestern@cisco.com</email>
			<uri>http://www.cisco.com/security</uri>
		</address>
	</author>

    <date month="April" year="2013" />
    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>dns</keyword>


    <abstract>
      <t>This document describes the output format used between Passive DNS query interface. The output format description includes also a common meaning per Passive DNS system.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
     <t>Passive DNS is a technique described by Florian Weimer in 2005 in Passive DNS replication, F Weimer - 17th Annual FIRST Conference on Computer Security. Since then multiple Passive DNS implementations evolved over time. Users of these Passive DNS servers query a server (often via Whois [Ref: WHOIS] or HTTP and ReST), parse the results and process them in other applications.</t>
     <t>
    There are multiple implementation of Passive DNS software. Users of passive DNS query each implementation and aggregate the results for their search. This document describes the output format of three Passive DNS Systems which are in use today and which already share a nearly identical output format.

	As the format and the meaning of output fields from each Passive DNS need to be consistent, we propose in this document a solution to commonly name each field along with their corresponding interpretation. The format format is following a simple key-value structure in <xref target="RFC4627">JSON</xref> format.
The benefit of having a consistent Passive DNS output format is that multiple client implementations can query different servers without having to have a separate parser for each
individual server. [https://github.com/chrislee35/passivedns-client] currently implements multiple parsers due to a lack of standardization.

The document does not describe the protocol (e.g. whois, HTTP REST or XMPP) nor the query format used to query the Passive DNS. Neither does this document describe "pre-recursor" Passive DNS Systems.
     </t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section title="Limitation">
    <t> As a Passive DNS can include protection mechanisms for their operation, results might be different due to those protection measures.  These mechanisms filter out DNS answers if they fail some criteria. The bailiwick algorithm (c.f. http://www.isc.org/files/passive_dns_hardening_handout.pdf) protects the Passive DNS Database from cache poisoning attacks [ref: Dan Kaminsky].

        Another limitiation that clients querying the database need to be aware of is that each query simply gets an snapshot-answer of the time of querying. Clients MUST NOT rely on consistent answers.
    </t>
    </section>
    <section title="Common Output Format">
		<t>The formatting of the answer follows the <xref target="RFC4627">JSON</xref> format. The order of the fields is not significant for the same resource type. That means, the same name tuple plus timing information identifies a unique answer per server.</t>
		<section title="Overview and Example">
		<t>The intent of this output format is to be easily parseable by scripts. Every implementation MUST support the JSON output format.</t>
		<figure><preamble>A sample output using the JSON format:</preamble><artwork><![CDATA[
... (list of )...  
{ "count": 97167, 
"time_first": "2010-06-25 17:07:02",
"rrtype": "A", "rrname": "google-public-dns-a.google.com.", 
"rdata": "8.8.8.8",
"time_last": "2013-02-05 17:34:03" } 
... (separated by newline)...
				  ]]></artwork></figure>
		</section>
		<section title="Mandatory Fields">
		<t>Implementation MUST support all the mandatory fields.</t>
		<t>The tuple (rrtype,rrname,rdata) will always be unique within one answer per server.</t>
			<section title="rrname">
			<t>This field returns the name of the queried resource.</t>
			</section>
			<section title="rrtype">
			 <t>This field returns the resource record type as seen by the passive DNS. The key is rrtype and the value is in the interpreted record type. If the value cannot be interpreted the
			 decimal value is returned following the principle of transparency as described in <xref target="RFC3597">RFC 3597</xref>.

			 The resource record type can be any values as described by IANA in the DNS parameters document in the section 'DNS Label types' (http://www.iana.org/assignments/dns-parameters).
			 Currently known and supported textual descritptions of rrtypes are: A, AAAA, CNAME, PTR, SOA, TXT, DNAME, NS, SRV, RP, NAPTR, HINFO, A6
			 A client MUST be able to understand these textual rtype values. In addition, a client MUST be able to handle a decimal value (as mentioned above) as answer.
			</t>
			</section>
			<section title="rdata">
				<t>This field returns the data of the queried resource. In general, this is to be interpreted as string. Depending on the rtype, this can be an IPv4 or IPv6 address, a domain name (as in the case of CNAMEs), an SPF record, etc.  A client MUST be able to interpret any value which is legal as the right hand side in a DNS zone file  <xref target="RFC1035">RFC 1035</xref> and <xref target="RFC1034">RFC 1034</xref>. If the rdata came from an unknown DNS resource records, the server must follow the transparency principle as described in <xref target="RFC3597">RFC 3597</xref>. (binary stream if any? base64?)</t>
			</section>
			<section title="time_first">
				<t>This field returns the first time that the record / unique tuple (rrname, rrtype, rdata) has been seen by the passive DNS. The date is expressed in seconds (decimal ascii) since 1st of January 1970 (unix timestamp). The time zone MUST be UTC.</t>
			</section>
			<section title="time_last">
			<t>This field returns the last time that the unique tuple (rrname, rrtype, rdata) record has been seen by the passive DNS. The date is expressed in seconds (decimal ascii) since 1st of January 1970 (unix timestamp). The time zone MUST be UTC..</t>
			</section>
		</section>
		<section title="Optional Fields">
			<t>Implementation SHOULD support one or more field.</t>
			<section title="count">
			<t>Specifies how many answers were received with the set of answers (i.e. same data). The number of requests is expressed as a decimal value.</t>
			<t>Specifies the number of times this particular event denoted by the other type fields has been seen in the given time interval (between time_last and time_first). Decimal number.</t>
			</section>
			<section title="bailiwick">
				<t>The bailiwick is the best estimate of the apex of the zone where this data is authoritative. String.</t>
			</section>
		</section>
		<section title="Additional Fields">
			<t>Implementations MAY support the following fields:</t>
			<section title="sensor_id">
			<t>This field returns the sensor information where the record was seen. The sensor_id is an opaque byte string as defined by <xref target="RFC5001"> RFC 5001 in section 2.3</xref>.</t>
		</section>
		</section>
	</section>


    <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->

    <?rfc needLines="8" ?>




    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Thanks to the Passive DNS developers who contributed to the document.</t>

    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>In some cases, Passive DNS output might contain confidential information and its access might be restricted. When an user is querying multiple Passive DNS and aggregating the data, the sensitivity of the data must be considered.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
	  &RFC1035;
	  &RFC1034;
	  &RFC4627;
      &RFC5001;
      &RFC3597;

      <reference anchor="min_ref">
        <!-- the following is the minimum to make xml2rfc happy -->

        <front>
          <title>Minimal Reference</title>

          <author initials="authInitials" surname="authSurName">
            <organization></organization>
          </author>

          <date year="2006" />
        </front>
      </reference>
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->

      &RFC2629;

      &RFC3552;

      &I-D.narten-iana-considerations-rfc2434bis;

    </references>

    <section anchor="app-additional" title="Appendix">
      <t>This becomes an Appendix.</t>
    </section>
  </back>
</rfc>
